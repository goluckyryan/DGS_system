#!/bin/bash -l

# A script to allow the $EDM windows to start terminal windows for 
# softioc, ioc and hopefully receivers.
#
# Each element in the system runs in an xterm that is running on the local 
# machine where the script is first invoked.
#
# Because the xterms all are running locally it is easy to locate and kill 
# them.  Because things are started remotely by calling the same script the
# code is localized to a single file
#

softTop=/global/softIOC
terminalServer="tsx"

runSoftIOC() {
   echo "Wrong SoftIOC. Aborted start attempt."
}

trigConsole() {
   export TERM=vt100
   echo " terminal trig" 
   xterm -T TrigCPU -sb -sl 10000 -e "telnet" $terminalServer "2001" &
}

ioc1Console() {
   export TERM=vt100
   echo " terminal 1" 
   xterm -T VME1 -sb -sl 10000 -e "telnet" $terminalServer "2002" &
}

ioc2Console() {
   export TERM=vt100
   echo " terminal 2" 
   xterm -T VME2 -sb -sl 10000 -e "telnet" $terminalServer "2003" &
}

ioc3Console() {
   export TERM=vt100
   echo " terminal 3" 
   xterm -T VME3 -sb -sl 10000 -e "telnet" $terminalServer "2003" &
}

ioc4Console() {
   export TERM=vt100
   echo " terminal 6" 
   xterm -T VME4 -sb -sl 1000 -e "telnet" $terminalServer "2005" &
}

ioc5Console() {
   export TERM=vt100
   echo " terminal 5" 
   xterm -T VME5 -sb -sl 1000 -e "telnet" $terminalServer "2012" &
}

ioc6Console() {
   export TERM=vt100
   echo " terminal 6" 
   xterm -T VME6 -sb -sl 1000 -e "telnet" $terminalServer "2007" &
}

ioc7Console() {
   export TERM=vt100
   echo " terminal 7"  
   xterm -T VME7 -sb -sl 1000 -e "telnet" $terminalServer "2008" &
}

ioc8Console() {
   export TERM=vt100
   echo " terminal 8" 
   xterm -T VME8 -sb -sl 1000 -e "telnet" $terminalServer "2009" &
}


ioc10Console() {
   export TERM=vt100
   echo " terminal 10" 
   xterm -T VME10 -sb -sl 1000 -e "telnet" $terminalServer "2010" &
}

ioc11Console() {
   export TERM=vt100
   echo " terminal 11" 
   xterm -T VME11 -sb -sl 1000 -e "telnet" $terminalServer "2011" &
}

runNewSoftIOC() {
   cd $softTop/iocBoot/iocdgsSoftIOC
   pwd
   var=$(ps ax | grep "T SoftIOC" | grep xterm)
   var2=${var: -3}
   if [[ $var2 = "cmd" ]] 
   then echo "SoftIOC already running"; exit
   fi
   if [[ $var2 = "IOC" ]] 
   then echo "New SoftIOC already running"; exit
   fi     
   echo "Spawning New SoftIOC"
   xterm -T SoftIOC -sb -sl 1000 -e " ../../bin/linux-x86_64/dgsSoftIOC dgsSoftIoc.cmd" &
}
#
# Inline portion begins here
#
# This part of the script runs the commands that will appear in the xterm 
# windows, whether run remotely or locally.  This is the only case
# in which the script is invoked with a parameter. The parameter is the same
# number that was entered in the menu by the operator in the interactive copy. 
#
#if [ $# -eq 1 ]
#then
#    cmd=$1
#    case $cmd in
#       1)	runSoftIOC ;;
#       2)	trigConsole ;;
#       3)	ioc1Console ;;
#       4)   ioc2Console ;;
#       5)   ioc3Console ;;
#       6)   ioc4Console ;;
#       7)   ioc5Console ;;
#       8)   ioc6Console ;;
#       9)   ioc7Console ;;
#      10)   ioc8Console ;;
#      11)   ioc10Console ;;
#      12)   ioc11Console ;;
#      13)   runNewSoftIOC ;;
#    esac
#    exit
#fi

if [ $# -eq 1 ]; then
  cmd=$1

   #export TERM=vt100
   case $cmd in
    "S") 
        name="SoftIOC"
        IP="none"
        softIOC=true
        ;;
    0)
        name="TrigIOC"
        IP="2001"
        softIOC=false
        ;;
    *)
        name="IOC$1"
        IP=$((2001 + $1))
        softIOC=false
        ;;
   esac
   echo " terminal ${name}, IP = ${IP}" 

   if [[ "${softIOC}" == true ]]; then
     echo "softIOC not implement yet"
   else
     gnome-terminal --title="${name}" --window --geometry=100x100+0+0 -- bash -c "telnet ${terminalServer} ${IP}" &
   fi

fi

